package ProjectEuler;

/**
 * Project Euler problem 2
 * @Copyright Â©2020 XIEXin. All rights reserved. 
 * @date 2020-03-23
 */

public final class Problem002 {
	public static void main(String[] args) {
		new Problem002().run();
	}
	
	private void run() {
		/*
		 * Problem 2:
		 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. 
		 * By starting with 1 and 2, the first 10 terms will be:
		 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
		 * By considering the terms in the Fibonacci sequence 
		 * whose values do not exceed four million, 
		 * find the sum of the even-valued terms.
		 */
		int N = 4000000;
		int values[] = new int[50];
		values[0] = 1;
		values[1] = 2;
		int i = 0;
		int index = 0;
		int sum = 0;
		
		while(values[i] < N) {
			if (values[i] %2 == 0)
				sum += values[i];	
			
			index = i;
			i++;
			values[i+1] = values[i] + values[i-1];
		}
		
		System.out.println("The ordinal number of the last number below four million is: " + (index + 1));
		System.out.println("The last number is: " + values[index]);
		System.out.println("The sum is: " + sum);
	}
}
